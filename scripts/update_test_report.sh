#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)
cd "$ROOT_DIR"

cargo test --workspace --all-targets --all-features -- --list > target/test-inventory-full.txt

perl -e '
use strict; use warnings;
my $file="target/test-inventory-full.txt";
open my $fh, "<", $file or die $!;
my %raw; my $current;
while(<$fh>){
  chomp;
  next unless length;
  s/^\s+|\s+$//g;
  if(/^Running\s+(.+)$/){
    $current = $1;
    $raw{$current} ||= {tests=>0, bench=>0};
    next;
  }
  if(/^(\d+) tests?,\s*(\d+) benchmarks?/){
    my ($tests,$bench) = ($1+0,$2+0);
    my $key = $current // "unittests src/lib.rs";
    $raw{$key} ||= {tests=>0, bench=>0};
    $raw{$key}->{tests} = $tests;
    $raw{$key}->{bench} = $bench;
  }
}
close $fh;
my %agg;
while(my ($k,$v) = each %raw){
  my $label;
  if($k =~ m#/cim_domain-[^/]+\)$#){
    $label = "cim-domain (unit tests)";
  } elsif($k =~ m#/cim_domain_examples-[^/]+\)$#){
    $label = "examples/domain_examples (unit tests)";
  } elsif($k =~ m#^tests/[^\s]+#){
    ($label) = ($k =~ m#^(tests/[^\s]+)#);
  } elsif($k =~ m#^unittests\s+(src/[^\s]+)#){
    $label = $1;
  } else {
    next;
  }
  $agg{$label}->{tests} += $v->{tests};
  $agg{$label}->{bench} += $v->{bench};
}
open my $out, ">", "doc/testing/test_report.md" or die $!;
print $out "# Test Inventory Report\n\n";
print $out "Generated by cargo test --all-targets --all-features -- --list\n\n";
print $out "| Target | Tests | Benchmarks |\n| --- | ---: | ---: |\n";
my $total_tests = 0;
my $total_targets = 0;
for my $label (sort keys %agg){
  my $tests = $agg{$label}->{tests};
  my $bench = $agg{$label}->{bench};
  print $out "| $label | $tests | $bench |\n";
  $total_tests += $tests;
  $total_targets++;
}
print $out "\n**Total test targets:** $total_targets\\n\\n";
print $out "**Total test cases:** $total_tests\\n";
close $out;
'
