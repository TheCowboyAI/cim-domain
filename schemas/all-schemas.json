{
  "$id": "https://schemas.cim-domain.ai/all-schemas.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Combined collection of all CIM Domain event payload schemas. Use these schemas for validation and code generation in any language.",
  "generated_at": "2025-08-10T06:28:36.024628301+00:00",
  "schemas": {
    "CommandAcknowledgment": {
      "$id": "https://schemas.cim-domain.ai/CommandAcknowledgment.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "CommandStatus": {
          "description": "Command status",
          "oneOf": [
            {
              "description": "Command was accepted for processing",
              "enum": [
                "Accepted"
              ],
              "type": "string"
            },
            {
              "description": "Command was rejected (e.g., validation failed)",
              "enum": [
                "Rejected"
              ],
              "type": "string"
            }
          ]
        }
      },
      "description": "Acknowledgment returned when a command is submitted",
      "properties": {
        "command_id": {
          "description": "The command ID that was acknowledged",
          "format": "uuid",
          "type": "string"
        },
        "correlation_id": {
          "description": "Correlation ID (same as command ID for originating commands)",
          "format": "uuid",
          "type": "string"
        },
        "reason": {
          "description": "Optional rejection reason",
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/CommandStatus"
            }
          ],
          "description": "Status of command acceptance"
        }
      },
      "required": [
        "command_id",
        "correlation_id",
        "status"
      ],
      "title": "CommandAcknowledgment",
      "type": "object"
    },
    "CommandStatus": {
      "$id": "https://schemas.cim-domain.ai/CommandStatus.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Status of command acceptance",
      "oneOf": [
        {
          "description": "Command was accepted for processing",
          "enum": [
            "Accepted"
          ],
          "type": "string"
        },
        {
          "description": "Command was rejected (e.g., validation failed)",
          "enum": [
            "Rejected"
          ],
          "type": "string"
        }
      ],
      "title": "CommandStatus"
    },
    "DomainEventEnvelope": {
      "$id": "https://schemas.cim-domain.ai/DomainEventEnvelope.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "EventMetadata": {
          "description": "Basic event metadata for standalone use",
          "properties": {
            "propagation_scope": {
              "allOf": [
                {
                  "$ref": "#/definitions/PropagationScope"
                }
              ],
              "description": "Propagation scope"
            },
            "properties": {
              "additionalProperties": true,
              "description": "Additional metadata",
              "type": "object"
            },
            "source": {
              "description": "Source service/context",
              "type": "string"
            },
            "version": {
              "description": "Event version",
              "type": "string"
            }
          },
          "required": [
            "propagation_scope",
            "properties",
            "source",
            "version"
          ],
          "type": "object"
        },
        "PropagationScope": {
          "description": "Basic event propagation scope",
          "oneOf": [
            {
              "description": "Never leaves the app",
              "enum": [
                "LocalOnly"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to container",
              "enum": [
                "Container"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to local leaf",
              "enum": [
                "Leaf"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to cluster",
              "enum": [
                "Cluster"
              ],
              "type": "string"
            },
            {
              "description": "May bubble globally",
              "enum": [
                "SuperCluster"
              ],
              "type": "string"
            }
          ]
        }
      },
      "description": "Domain event envelope with full metadata",
      "properties": {
        "event": {
          "description": "The actual event"
        },
        "metadata": {
          "allOf": [
            {
              "$ref": "#/definitions/EventMetadata"
            }
          ],
          "description": "Event metadata"
        },
        "subject": {
          "description": "NATS subject for routing",
          "type": "string"
        }
      },
      "required": [
        "event",
        "metadata",
        "subject"
      ],
      "title": "DomainEventEnvelope",
      "type": "object"
    },
    "EventEnvelope": {
      "$id": "https://schemas.cim-domain.ai/EventEnvelope.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "PropagationScope": {
          "description": "Basic event propagation scope",
          "oneOf": [
            {
              "description": "Never leaves the app",
              "enum": [
                "LocalOnly"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to container",
              "enum": [
                "Container"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to local leaf",
              "enum": [
                "Leaf"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to cluster",
              "enum": [
                "Cluster"
              ],
              "type": "string"
            },
            {
              "description": "May bubble globally",
              "enum": [
                "SuperCluster"
              ],
              "type": "string"
            }
          ]
        }
      },
      "description": "Event envelope with subject and propagation scope",
      "properties": {
        "event": {
          "description": "The domain event"
        },
        "propagation": {
          "allOf": [
            {
              "$ref": "#/definitions/PropagationScope"
            }
          ],
          "description": "Determines if/how to escalate"
        },
        "subject": {
          "description": "Subject for routing (e.g., \"people.person.registered.v1\")",
          "type": "string"
        }
      },
      "required": [
        "event",
        "propagation",
        "subject"
      ],
      "title": "EventEnvelope",
      "type": "object"
    },
    "EventMetadata": {
      "$id": "https://schemas.cim-domain.ai/EventMetadata.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "PropagationScope": {
          "description": "Basic event propagation scope",
          "oneOf": [
            {
              "description": "Never leaves the app",
              "enum": [
                "LocalOnly"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to container",
              "enum": [
                "Container"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to local leaf",
              "enum": [
                "Leaf"
              ],
              "type": "string"
            },
            {
              "description": "May bubble to cluster",
              "enum": [
                "Cluster"
              ],
              "type": "string"
            },
            {
              "description": "May bubble globally",
              "enum": [
                "SuperCluster"
              ],
              "type": "string"
            }
          ]
        }
      },
      "description": "Metadata for event processing",
      "properties": {
        "propagation_scope": {
          "allOf": [
            {
              "$ref": "#/definitions/PropagationScope"
            }
          ],
          "description": "Propagation scope"
        },
        "properties": {
          "additionalProperties": true,
          "description": "Additional metadata",
          "type": "object"
        },
        "source": {
          "description": "Source service/context",
          "type": "string"
        },
        "version": {
          "description": "Event version",
          "type": "string"
        }
      },
      "required": [
        "propagation_scope",
        "properties",
        "source",
        "version"
      ],
      "title": "EventMetadata",
      "type": "object"
    },
    "Pagination": {
      "$id": "https://schemas.cim-domain.ai/Pagination.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Pagination configuration",
      "properties": {
        "offset": {
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "page": {
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "size": {
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        }
      },
      "required": [
        "offset",
        "page",
        "size"
      ],
      "title": "Pagination",
      "type": "object"
    },
    "PropagationScope": {
      "$id": "https://schemas.cim-domain.ai/PropagationScope.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Propagation scope for event escalation",
      "oneOf": [
        {
          "description": "Never leaves the app",
          "enum": [
            "LocalOnly"
          ],
          "type": "string"
        },
        {
          "description": "May bubble to container",
          "enum": [
            "Container"
          ],
          "type": "string"
        },
        {
          "description": "May bubble to local leaf",
          "enum": [
            "Leaf"
          ],
          "type": "string"
        },
        {
          "description": "May bubble to cluster",
          "enum": [
            "Cluster"
          ],
          "type": "string"
        },
        {
          "description": "May bubble globally",
          "enum": [
            "SuperCluster"
          ],
          "type": "string"
        }
      ],
      "title": "PropagationScope"
    },
    "QueryCriteria": {
      "$id": "https://schemas.cim-domain.ai/QueryCriteria.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Query criteria for data retrieval",
      "properties": {
        "filters": {
          "additionalProperties": true,
          "type": "object"
        },
        "limit": {
          "format": "uint",
          "minimum": 0.0,
          "type": [
            "integer",
            "null"
          ]
        },
        "offset": {
          "format": "uint",
          "minimum": 0.0,
          "type": [
            "integer",
            "null"
          ]
        },
        "order_by": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "filters"
      ],
      "title": "QueryCriteria",
      "type": "object"
    },
    "QueryResponse": {
      "$id": "https://schemas.cim-domain.ai/QueryResponse.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Query response returned by query handlers",
      "properties": {
        "correlation_id": {
          "description": "Correlation ID for tracking",
          "format": "uuid",
          "type": "string"
        },
        "query_id": {
          "description": "The query ID that was processed",
          "format": "uuid",
          "type": "string"
        },
        "result": {
          "description": "The result data"
        }
      },
      "required": [
        "correlation_id",
        "query_id",
        "result"
      ],
      "title": "QueryResponse",
      "type": "object"
    },
    "QueryResult": {
      "$id": "https://schemas.cim-domain.ai/QueryResult.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Query result with pagination",
      "properties": {
        "has_more": {
          "type": "boolean"
        },
        "items": {
          "items": true,
          "type": "array"
        },
        "next_cursor": {
          "type": [
            "string",
            "null"
          ]
        },
        "total_count": {
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        }
      },
      "required": [
        "has_more",
        "items",
        "total_count"
      ],
      "title": "QueryResult",
      "type": "object"
    },
    "QueryStatus": {
      "$id": "https://schemas.cim-domain.ai/QueryStatus.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Status of query acceptance",
      "oneOf": [
        {
          "description": "Query was accepted for processing",
          "enum": [
            "Accepted"
          ],
          "type": "string"
        },
        {
          "description": "Query was rejected (e.g., invalid parameters)",
          "enum": [
            "Rejected"
          ],
          "type": "string"
        }
      ],
      "title": "QueryStatus"
    },
    "SagaEvent": {
      "$id": "https://schemas.cim-domain.ai/SagaEvent.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Saga orchestration event",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "Started": {
              "properties": {
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "saga_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "Started"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "StepStarted": {
              "properties": {
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "step_id": {
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "saga_id",
                "step_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "StepStarted"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "StepCompleted": {
              "properties": {
                "result": true,
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "step_id": {
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "result",
                "saga_id",
                "step_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "StepCompleted"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "StepFailed": {
              "properties": {
                "error": {
                  "type": "string"
                },
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "step_id": {
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "error",
                "saga_id",
                "step_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "StepFailed"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Completed": {
              "properties": {
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "saga_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "Completed"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "CompensationStarted": {
              "properties": {
                "failed_step": {
                  "type": "string"
                },
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "failed_step",
                "saga_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "CompensationStarted"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Compensated": {
              "properties": {
                "saga_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "timestamp": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "saga_id",
                "timestamp"
              ],
              "type": "object"
            }
          },
          "required": [
            "Compensated"
          ],
          "type": "object"
        }
      ],
      "title": "SagaEvent"
    },
    "SortDirection": {
      "$id": "https://schemas.cim-domain.ai/SortDirection.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Sort direction for query results",
      "enum": [
        "Ascending",
        "Descending"
      ],
      "title": "SortDirection",
      "type": "string"
    },
    "WorkflowCancelled": {
      "$id": "https://schemas.cim-domain.ai/WorkflowCancelled.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow cancelled event",
      "properties": {
        "cancelled_at": {
          "description": "When the workflow was cancelled",
          "format": "date-time",
          "type": "string"
        },
        "current_state": {
          "description": "The state at which the workflow was cancelled",
          "type": "string"
        },
        "reason": {
          "description": "The reason for cancellation",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that was cancelled",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "cancelled_at",
        "current_state",
        "reason",
        "workflow_id"
      ],
      "title": "WorkflowCancelled",
      "type": "object"
    },
    "WorkflowCompleted": {
      "$id": "https://schemas.cim-domain.ai/WorkflowCompleted.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow completed event",
      "properties": {
        "completed_at": {
          "description": "When the workflow completed",
          "format": "date-time",
          "type": "string"
        },
        "final_state": {
          "description": "The final state of the workflow",
          "type": "string"
        },
        "total_duration_seconds": {
          "description": "The total duration of the workflow execution in seconds",
          "format": "double",
          "type": "number"
        },
        "workflow_id": {
          "description": "The workflow that completed",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "completed_at",
        "final_state",
        "total_duration_seconds",
        "workflow_id"
      ],
      "title": "WorkflowCompleted",
      "type": "object"
    },
    "WorkflowEvent": {
      "$id": "https://schemas.cim-domain.ai/WorkflowEvent.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "WorkflowCancelled": {
          "description": "Workflow cancelled event",
          "properties": {
            "cancelled_at": {
              "description": "When the workflow was cancelled",
              "format": "date-time",
              "type": "string"
            },
            "current_state": {
              "description": "The state at which the workflow was cancelled",
              "type": "string"
            },
            "reason": {
              "description": "The reason for cancellation",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that was cancelled",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "cancelled_at",
            "current_state",
            "reason",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowCompleted": {
          "description": "Workflow completed event",
          "properties": {
            "completed_at": {
              "description": "When the workflow completed",
              "format": "date-time",
              "type": "string"
            },
            "final_state": {
              "description": "The final state of the workflow",
              "type": "string"
            },
            "total_duration_seconds": {
              "description": "The total duration of the workflow execution in seconds",
              "format": "double",
              "type": "number"
            },
            "workflow_id": {
              "description": "The workflow that completed",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "completed_at",
            "final_state",
            "total_duration_seconds",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowFailed": {
          "description": "Workflow failed event",
          "properties": {
            "current_state": {
              "description": "The state at which the workflow failed",
              "type": "string"
            },
            "error": {
              "description": "The error that caused the failure",
              "type": "string"
            },
            "failed_at": {
              "description": "When the workflow failed",
              "format": "date-time",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that failed",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "current_state",
            "error",
            "failed_at",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowResumed": {
          "description": "Workflow resumed event",
          "properties": {
            "current_state": {
              "description": "The state from which the workflow resumed",
              "type": "string"
            },
            "resumed_at": {
              "description": "When the workflow was resumed",
              "format": "date-time",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that was resumed",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "current_state",
            "resumed_at",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowStarted": {
          "description": "Workflow started event",
          "properties": {
            "definition_id": {
              "description": "The ID of the graph definition this workflow is based on",
              "format": "uuid",
              "type": "string"
            },
            "initial_state": {
              "description": "The initial state of the workflow",
              "type": "string"
            },
            "started_at": {
              "description": "When the workflow was started",
              "format": "date-time",
              "type": "string"
            },
            "workflow_id": {
              "description": "The unique identifier of the workflow instance",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "definition_id",
            "initial_state",
            "started_at",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowSuspended": {
          "description": "Workflow suspended event",
          "properties": {
            "current_state": {
              "description": "The state at which the workflow was suspended",
              "type": "string"
            },
            "reason": {
              "description": "The reason for suspension",
              "type": "string"
            },
            "suspended_at": {
              "description": "When the workflow was suspended",
              "format": "date-time",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that was suspended",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "current_state",
            "reason",
            "suspended_at",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowTransitionExecuted": {
          "description": "Workflow transition executed event",
          "properties": {
            "executed_at": {
              "description": "When the transition was executed",
              "format": "date-time",
              "type": "string"
            },
            "from_state": {
              "description": "The state before the transition",
              "type": "string"
            },
            "input": {
              "description": "The input that triggered the transition"
            },
            "output": {
              "description": "The output produced by the transition"
            },
            "to_state": {
              "description": "The state after the transition",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that executed the transition",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "executed_at",
            "from_state",
            "input",
            "output",
            "to_state",
            "workflow_id"
          ],
          "type": "object"
        },
        "WorkflowTransitioned": {
          "description": "Workflow transitioned event",
          "properties": {
            "from_state": {
              "description": "The state before the transition",
              "type": "string"
            },
            "to_state": {
              "description": "The state after the transition",
              "type": "string"
            },
            "transition_id": {
              "description": "The unique identifier of the transition",
              "type": "string"
            },
            "workflow_id": {
              "description": "The workflow that transitioned",
              "format": "uuid",
              "type": "string"
            }
          },
          "required": [
            "from_state",
            "to_state",
            "transition_id",
            "workflow_id"
          ],
          "type": "object"
        }
      },
      "description": "Combined workflow event enum",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "Started": {
              "$ref": "#/definitions/WorkflowStarted"
            }
          },
          "required": [
            "Started"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "TransitionExecuted": {
              "$ref": "#/definitions/WorkflowTransitionExecuted"
            }
          },
          "required": [
            "TransitionExecuted"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Transitioned": {
              "$ref": "#/definitions/WorkflowTransitioned"
            }
          },
          "required": [
            "Transitioned"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Completed": {
              "$ref": "#/definitions/WorkflowCompleted"
            }
          },
          "required": [
            "Completed"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Suspended": {
              "$ref": "#/definitions/WorkflowSuspended"
            }
          },
          "required": [
            "Suspended"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Resumed": {
              "$ref": "#/definitions/WorkflowResumed"
            }
          },
          "required": [
            "Resumed"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Cancelled": {
              "$ref": "#/definitions/WorkflowCancelled"
            }
          },
          "required": [
            "Cancelled"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "Failed": {
              "$ref": "#/definitions/WorkflowFailed"
            }
          },
          "required": [
            "Failed"
          ],
          "type": "object"
        }
      ],
      "title": "WorkflowEvent"
    },
    "WorkflowFailed": {
      "$id": "https://schemas.cim-domain.ai/WorkflowFailed.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow failed event",
      "properties": {
        "current_state": {
          "description": "The state at which the workflow failed",
          "type": "string"
        },
        "error": {
          "description": "The error that caused the failure",
          "type": "string"
        },
        "failed_at": {
          "description": "When the workflow failed",
          "format": "date-time",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that failed",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "current_state",
        "error",
        "failed_at",
        "workflow_id"
      ],
      "title": "WorkflowFailed",
      "type": "object"
    },
    "WorkflowResumed": {
      "$id": "https://schemas.cim-domain.ai/WorkflowResumed.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow resumed event",
      "properties": {
        "current_state": {
          "description": "The state from which the workflow resumed",
          "type": "string"
        },
        "resumed_at": {
          "description": "When the workflow was resumed",
          "format": "date-time",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that was resumed",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "current_state",
        "resumed_at",
        "workflow_id"
      ],
      "title": "WorkflowResumed",
      "type": "object"
    },
    "WorkflowStarted": {
      "$id": "https://schemas.cim-domain.ai/WorkflowStarted.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow started event",
      "properties": {
        "definition_id": {
          "description": "The ID of the graph definition this workflow is based on",
          "format": "uuid",
          "type": "string"
        },
        "initial_state": {
          "description": "The initial state of the workflow",
          "type": "string"
        },
        "started_at": {
          "description": "When the workflow was started",
          "format": "date-time",
          "type": "string"
        },
        "workflow_id": {
          "description": "The unique identifier of the workflow instance",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "definition_id",
        "initial_state",
        "started_at",
        "workflow_id"
      ],
      "title": "WorkflowStarted",
      "type": "object"
    },
    "WorkflowSuspended": {
      "$id": "https://schemas.cim-domain.ai/WorkflowSuspended.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow suspended event",
      "properties": {
        "current_state": {
          "description": "The state at which the workflow was suspended",
          "type": "string"
        },
        "reason": {
          "description": "The reason for suspension",
          "type": "string"
        },
        "suspended_at": {
          "description": "When the workflow was suspended",
          "format": "date-time",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that was suspended",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "current_state",
        "reason",
        "suspended_at",
        "workflow_id"
      ],
      "title": "WorkflowSuspended",
      "type": "object"
    },
    "WorkflowTransitionExecuted": {
      "$id": "https://schemas.cim-domain.ai/WorkflowTransitionExecuted.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow transition executed event",
      "properties": {
        "executed_at": {
          "description": "When the transition was executed",
          "format": "date-time",
          "type": "string"
        },
        "from_state": {
          "description": "The state before the transition",
          "type": "string"
        },
        "input": {
          "description": "The input that triggered the transition"
        },
        "output": {
          "description": "The output produced by the transition"
        },
        "to_state": {
          "description": "The state after the transition",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that executed the transition",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "executed_at",
        "from_state",
        "input",
        "output",
        "to_state",
        "workflow_id"
      ],
      "title": "WorkflowTransitionExecuted",
      "type": "object"
    },
    "WorkflowTransitioned": {
      "$id": "https://schemas.cim-domain.ai/WorkflowTransitioned.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "Workflow transitioned event",
      "properties": {
        "from_state": {
          "description": "The state before the transition",
          "type": "string"
        },
        "to_state": {
          "description": "The state after the transition",
          "type": "string"
        },
        "transition_id": {
          "description": "The unique identifier of the transition",
          "type": "string"
        },
        "workflow_id": {
          "description": "The workflow that transitioned",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "from_state",
        "to_state",
        "transition_id",
        "workflow_id"
      ],
      "title": "WorkflowTransitioned",
      "type": "object"
    }
  },
  "title": "CIM Domain All Schemas",
  "version": "0.5.0"
}